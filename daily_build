#!/bin/bash

set -eux

CONFIG=/usr/local/bin/repo/config

REQUIRED_PACKAGE=

# Default options values
## Either building source in a chroot env or not
BUILD_SRC_LOCALLY=false
## Either force package build if there is no update or not
FORCE=false
## Final version of the package
VERSION="$(date +%Y.%m.%d)+$(date +%H%M)"
## Repository branch to checkout
BRANCH=unstable

# Global and environment variables
PACKAGES_PATH=/home/pbuilder/packages
DISTRIBUTION="unstable"
CODENAME="jessie"

# pbuilder
BASE_TGZ="/var/cache/pbuilder/images/amd64/${CODENAME}.tgz"
BUILD_SOURCES=/usr/local/bin/pbuilder/build-sources
PBUILDERRC=~/.pbuilderrc

INCLUDE_CHANGES=/usr/local/bin/repo/include-changes
PROCESS_INCLUDE=/usr/local/bin/repo/process-include

OVERWRITE_REPO_DIR=

DEBSIGN_KEYID=59A3E6FF
DEBFULLNAME="YunoHost Contributors"
DEBEMAIL="contrib@yunohost.org"

if ! which dch > /dev/null; then
    echo "You don't have dch on your PATH, please do a 'apt-get install devscripts'"
    exit 1
fi

if ! which pbuilder > /dev/null; then
    echo "You don't have pbuilder on your PATH, please do a 'apt-get install pbuilder'"
    exit 1
fi

if ! which reprepro > /dev/null; then
    echo "You don't have reprepro on your PATH, please do a 'apt-get install reprepro'"
    exit 1
fi

if ! which rebuildd-job > /dev/null; then
    echo "You don't have rebuildd on your PATH, please do a 'apt-get install rebuildd'"
    exit 1
fi

usage()
{
cat << EOF
Usage: `basename $0` [options]

OPTIONS:
  -p PACKAGE          Package name to build
  -v VERSION          Package version to set (default: $VERSION)
  -b BRANCH           Branch to use (default: $BRANCH)
  -c CONFIG           Path to config file (default: $CONFIG)
  -d PATH             Where to build the packages (default: $PACKAGES_PATH)
  -t BASE_TGZ         Base tgz to use for pbuilder (default: $BASE_TGZ)
  -s BUILD_SOURCES    Build-sources for pbuilder (default: $BUILD_SOURCES)
  -r PBUILDERRC       Path to pbuilderrc (default: $PBUILDERRC)
  -i PBUILDERRC       Path to include-changes (default: $INCLUDE_CHANGES)
  -e REPO_DIR         Overwrite REPO_DIR  from config file
  -o PROCESS_INCLUDE  Path to process-include (default: $PROCESS_INCLUDE)
  -k DEBSIGN_KEYID    Key to sign packages with (default: $DEBSIGN_KEYID)
  -f                  Force package building
  -l                  Build sources locally
  -h                  Print this help
EOF
exit
}

absolute_path() {
    if [[ ! "$1" == "/*" ]] || [[ ! "$1" == "~*" ]]; then
        echo $(pwd)/$OPTARG
    else
        echo $OPTARG
    fi
}

# Parse options
while getopts ":fhlb:c:d:v:p:t:s:r:i:e:o:k:" option; do
    case $option in
        f)
            FORCE=true
            ;;
        l)
            BUILD_SRC_LOCALLY=true
            ;;
        v)
            VERSION=$OPTARG
            ;;
        b)
            BRANCH=$OPTARG
            ;;
        c)
            CONFIG=$(absolute_path $OPTARG)
            ;;
        d)
            PACKAGES_PATH=$(absolute_path $OPTARG)
            ;;
        p)
            REQUIRED_PACKAGE=$OPTARG
            ;;
        t)
            BASE_TGZ=$(absolute_path $OPTARG)
            ;;
        s)
            BUILD_SOURCES=$(absolute_path $OPTARG)
            ;;
        r)
            PBUILDERRC=$(absolute_path $OPTARG)
            ;;
        i)
            INCLUDE_CHANGES=$(absolute_path $OPTARG)
            ;;
        e)
            OVERWRITE_REPO_DIR=$(absolute_path $OPTARG)
            ;;
        o)
            PROCESS_INCLUDE=$(absolute_path $OPTARG)
            ;;
        k)
            DEBSIGN_KEYID=$OPTARG
            ;;
        h)
            usage
            ;;
        :)
            echo "Option -$OPTARG requires an argument"
            exit 1
            ;;
        \?)
            echo "-$OPTARG: invalid option"
            exit 1
            ;;
    esac
done

export DEBSIGN_KEYID
export DEBFULLNAME
export DEBEMAIL

source $CONFIG

if [ -n "$OVERWRITE_REPO_DIR" ]; then
    REPO_DIR=$OVERWRITE_REPO_DIR
fi

if [ ! -e "$PACKAGES_PATH" ]; then
    mkdir $PACKAGES_PATH
fi

if [ ! -e /var/cache/archive/ ]; then
    echo "WARNING: /var/cache/archive/ doesn't exist, mkdir it"
    sudo mkdir /var/cache/archive
fi

cd $PACKAGES_PATH

# Find packages to build
if [ -n "$REQUIRED_PACKAGE" ]; then
    NEW_PACKAGES=$REQUIRED_PACKAGE
else
    NEW_PACKAGES=$(find . -maxdepth 1 -mindepth 1 -type d  | cut -d '/' -f2 | grep -v SSOwat | sort)
    if [ ! -n "$NEW_PACKAGES" ]; then
        exit 1
    fi 
fi

cp $REPO_DIR/conf/distributions.tmpl $REPO_DIR/conf/distributions
sed -i "s#DEBSIGN_KEYID#$DEBSIGN_KEYID#g" $REPO_DIR/conf/distributions
sed -i "s#PROCESS_INCLUDE#$PROCESS_INCLUDE#g" $REPO_DIR/conf/distributions

PKG_TO_BUILD=0

for package in $NEW_PACKAGES; do
    if [ ! -e "$package" ]; then
        git clone https://github.com/yunohost/$package
    fi

    cd $package

    echo "---------------------------------------------"
    echo "Selected package: ${package}"

    # Fetch and update package from origin
    echo "Looking for changes from git..."
    git fetch origin
    git checkout $BRANCH
    if ! $FORCE && [ -z "$(git log $BRANCH..origin/$BRANCH)" ]; then
        echo "Local sources already up-to-date"
        continue
    fi
    git pull origin $BRANCH

    echo "Updating changelog to version ${VERSION}"
    rm -f debian/changelog.dch
    cp debian/changelog debian/changelog.old
    dch --package $package -v "${VERSION}" -D ${DISTRIBUTION} --force-distribution "Daily build." -b > /dev/null 2>&1

    changes_file=${PACKAGES_PATH}/${package}_${VERSION}_source.changes

    echo "Building source package of ${package}_${VERSION}..."
    if $BUILD_SRC_LOCALLY; then
        debuild -S -sa > /dev/null
    else
        sudo pbuilder execute --configfile $PBUILDERRC --bindmounts ${PACKAGES_PATH} --basetgz $BASE_TGZ -- $BUILD_SOURCES ${PACKAGES_PATH}/${package}
    fi
    if [ $? -ne 0 ] || [ ! -f ${changes_file} ]; then
        echo "An error occured while building source package ${package}"
        exit 1
    fi

    echo "Adding ${package}_${VERSION} to ${CODENAME}/${DISTRIBUTION}..."
#    /usr/local/bin/repo/move-to-incoming "../${package}_${VERSION}_source.changes"
    $INCLUDE_CHANGES $CODENAME $DISTRIBUTION $changes_file $CONFIG $REPO_DIR
    RET=$?

    # Do not save in changelog
    cp debian/changelog.old debian/changelog
    rm debian/changelog.old

    if [ $RET -ne 0 ]; then
        echo "An error occured while building source package ${package}"
    else
        PKG_TO_BUILD+=1
    fi
done

if [ $PKG_TO_BUILD -eq 0 ]; then
    echo "Nothing to build"
    exit 1
fi

#echo "Process incoming in repository..."
#sudo reprepro -C $DISTRIBUTION -V -b $REPO_DIR processincoming yunohost
#if [ $? -ne 0 ]; then
#    echo "An error occured while processing incoming"
#    exit 1
#fi

#echo "Update packages local database..."
#sudo apt-get update > /dev/null 1>&1

echo "Build will start soon. See http://rebuild.yunohost.org"
